<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="a471f223-6533-42d2-b517-09467e05f860" activeEnvironment="Default" name="SparkDemo" resourceRoot="" soapui-version="5.1.2" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="354ba45d-706c-4c3e-976c-b4d14e959468" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://localhost:9000" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>http://DEV-JavierR:8080/</con:endpoint><con:endpoint>http://localhost:8000</con:endpoint></con:endpoints><con:resource name="getAllPersons" path="/persons" id="7dcb8e18-4b50-4bc3-9cd5-df7e25d5023a"><con:settings/><con:parameters/><con:method name="Method 1" id="07a24bf8-1ccc-49cf-a67c-7da13ee86bd9" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="e80e88f9-7a0c-4e17-b797-53521399f4e0" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:originalUri>http://localhost/person</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="getPersonById" path="/persons/{id}" id="90dbbdd6-8c11-4b04-b7b5-9676c83ee34a"><con:settings/><con:parameters><con:parameter><con:name>id</con:name><con:value>id</con:value><con:style>TEMPLATE</con:style><con:default>id</con:default></con:parameter></con:parameters><con:method name="Method 1" id="825b0a5c-4bd8-4e86-8d7c-1cf3e0a6f613" method="GET"><con:settings/><con:parameters/><con:request name="Request 1" id="752253d6-3781-4177-b351-d14785acc5bc" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="deletePerson" path="/persons/{id}" id="c80085ba-87a4-4aee-aa2d-6581aaf9cd89"><con:settings/><con:parameters><con:parameter><con:name>id</con:name><con:value>id</con:value><con:style>TEMPLATE</con:style><con:default>id</con:default></con:parameter></con:parameters><con:method name="Method 1" id="cb2152ed-1fc2-4468-b9a5-5536584982c1" method="DELETE"><con:settings/><con:parameters/><con:request name="Request 1" id="3f574a2a-11da-49c7-b9f6-5d1e44165bc2" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="editPerson" path="/persons/{id}" id="60ae2970-349f-4edd-a5e1-e467885da86b"><con:settings/><con:parameters><con:parameter><con:name>id</con:name><con:value>id</con:value><con:style>TEMPLATE</con:style><con:default>id</con:default></con:parameter></con:parameters><con:method name="Method 1" id="7afabb38-b1e0-41be-9105-1af66e43e766" method="PUT"><con:settings/><con:parameters/><con:request name="Request 1" id="b0894ca2-5a02-4dad-875e-a37e5ffdf7cc" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="create person" path="/persons" id="17fbdf8c-99b7-43be-a6d6-b40452d440f6"><con:settings/><con:parameters/><con:method name="Method 1" id="f39b9e51-d79f-4e36-ad02-d1bce71abc5b" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="56d1e519-c735-434f-b70f-18f91c87dfdf" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>{
 "name": Javier,
 "age": 20
}
</con:request><con:originalUri>http://localhost/persons</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:restMockService id="d414a1ff-eafe-41b9-8ba4-9eac4af88a8f" port="8000" path="/" host="DEV-JavierR" name="REST MockService 1" docroot=""><con:settings/><con:properties/><con:restMockAction name="/persons" method="GET" resourcePath="/persons" id="0d5233f0-e074-4045-8571-069ae78630fb"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Response 1" id="1b75d2ca-531e-476d-8120-5e5e92f46562" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>[{"id":1,"name":"Javier","age":20}]</con:responseContent><con:header><con:name>Server</con:name><con:value>Jetty(9.0.2.v20130417)</con:value></con:header></con:response></con:restMockAction></con:restMockService><con:properties><con:property><con:name>endPoint</con:name><con:value>http://localhost:8000</con:value></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer/></con:soapui-project>